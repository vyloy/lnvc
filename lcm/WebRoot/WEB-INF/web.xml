<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  <!-- server init servlet -->
  <servlet>
  	<servlet-name>serverInitServlet</servlet-name>
  	<servlet-class>com.lorent.web.util.ServerInitServletProxy</servlet-class>
  	<init-param>
  		<param-name>targetBean</param-name>
  		<param-value>serverInitServlet</param-value>
  	</init-param>
  	<load-on-startup>1</load-on-startup>
  </servlet>
  <!-- xmlrpc serverlet -->
  <servlet>
  	<servlet-name>rpcServlet</servlet-name>
  	<servlet-class>com.lorent.web.util.LcmRpcServlet</servlet-class>
  	<init-param>
  		<param-name>handler</param-name>
  		<param-value>
  			lcmConf-com.lorent.web.xmlrpc.handler.ConferenecHandler,
  			lcmUser-com.lorent.web.xmlrpc.handler.UserHandler,
  			lcmPerm-com.lorent.web.xmlrpc.handler.PermissionHandler,
  			lcmOrgan-com.lorent.web.xmlrpc.handler.OrganHandler
  		</param-value>
  	</init-param>
  </servlet>
  <servlet-mapping>
  	<servlet-name>rpcServlet</servlet-name>
  	<url-pattern>/lcmRpc</url-pattern>
  </servlet-mapping>
  <!-- request context listener -->
  <listener>
  	<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>
  <!-- 用户处理hibernate懒加载问题的filter -->  
  <filter>  
    <filter-name>openSessionInViewFilter</filter-name>  
    <filter-class>  
        org.springframework.orm.hibernate3.support.OpenSessionInViewFilter  
    </filter-class>  
    <init-param>  
        <param-name>sessionFactoryBeanName</param-name>  
        <param-value>sessionFactory</param-value>  
    </init-param>  
    <init-param>  
        <param-name>singleSession</param-name>  
        <param-value>false</param-value>  
    </init-param>  
  </filter> 
  <filter-mapping>
  	<filter-name>openSessionInViewFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  <!-- encoding filter -->
  <filter>
  	<filter-name>struts-cleanup</filter-name>
  	<filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>struts-cleanup</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
      <filter-name>encodingFilter</filter-name>
      <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
      <init-param>
         <param-name>encoding</param-name>
         <param-value>UTF-8</param-value>
      </init-param>
  </filter>
  <filter-mapping>
      <filter-name>encodingFilter</filter-name>
      <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!-- spring security filter chain -->
  <filter>
  	<filter-name>springSecurityFilterChain</filter-name>
  	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>springSecurityFilterChain</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  <!-- struts2 filter -->
  <filter>
  	<filter-name>struts2</filter-name>
  	<filter-class>
  		org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
  	</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>struts2</filter-name>
  	<url-pattern>*.action</url-pattern>
  	<dispatcher>FORWARD</dispatcher> 
	<dispatcher>REQUEST</dispatcher> 
  </filter-mapping>
  <filter-mapping>
  	<filter-name>struts2</filter-name>
  	<url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
  	<filter-name>struts2</filter-name>
  	<url-pattern>/struts/*</url-pattern>
  </filter-mapping>
  <!-- spring context loader listener 
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>-->
  <listener>
    <listener-class>com.lorent.web.util.CustomContextLoaderListener</listener-class>
  </listener>
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>/WEB-INF/applicationContext-*.xml</param-value>
  </context-param>
  <!-- image code servlet -->
  <servlet>
  	<servlet-name>imageCode</servlet-name>
  	<servlet-class>com.lorent.web.util.ImageCodeServlet</servlet-class>
  	<init-param>
  		<param-name>imageWidth</param-name>
  		<param-value>40</param-value>
  	</init-param>
  	<init-param>
  		<param-name>imageHeight</param-name>
  		<param-value>18</param-value>
  	</init-param>
  	<init-param>
  		<param-name>fontSize</param-name>
  		<param-value>14</param-value>
  	</init-param>
  </servlet>
  <servlet-mapping>
  	<servlet-name>imageCode</servlet-name>
  	<url-pattern>/imageCode</url-pattern>
  </servlet-mapping>
  <!-- spring security session control listener -->
  <listener>
  	<listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
  </listener>
  <!-- spring security session cache refresh listener -->
  <listener>
   	<listener-class>
      org.springframework.web.util.IntrospectorCleanupListener
   	</listener-class>
  </listener> 
  <!-- locale listener -->
  <!--<listener>
   	<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>-->
  <!-- spring security tag lib -->
  <jsp-config>
   <taglib>
      <taglib-uri>http://springframework.org/security/tags</taglib-uri>
      <taglib-location>/WEB-INF/security.tld</taglib-location>
   </taglib>
  </jsp-config>
  	<mime-mapping>  
	    <extension>jnlp</extension>  
	    <mime-type>application/x-java-jnlp-file</mime-type>  
	</mime-mapping>
  <servlet>
    <description></description>
    <display-name>ImportAndExportUsersServlet</display-name>
    <servlet-name>ImportAndExportUsersServlet</servlet-name>
    <servlet-class>com.lorent.web.util.ImportAndExportUsersServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>ImportAndExportUsersServlet</servlet-name>
    <url-pattern>/users</url-pattern>
  </servlet-mapping>
  <listener>
    <listener-class>
      org.apache.commons.fileupload.servlet.FileCleanerCleanup
    </listener-class>
  </listener>
</web-app>
