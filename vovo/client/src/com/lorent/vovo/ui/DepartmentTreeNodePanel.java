/*
 * DepartmentTreeNodePanel.java
 *
 * Created on __DATE__, __TIME__
 */

package com.lorent.vovo.ui;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Rectangle;

import javax.swing.ImageIcon;

import com.lorent.common.tree.MemberBean;
import com.lorent.vovo.bean.TreeNodeInfo;
import com.lorent.vovo.util.Constants;
import com.lorent.vovo.util.ImageUtil;
import com.lorent.vovo.util.UserInfoUtil;

/**
 *
 * @author  __USER__
 */
public class DepartmentTreeNodePanel extends TreeNodeInfoPanel {

	/** Creates new form DepartmentTreeNodePanel */
	public DepartmentTreeNodePanel() {
		initComponents();
		this.jLabel1.setVisible(false);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jCheckBox1 = new javax.swing.JCheckBox();
		userPanel = new javax.swing.JPanel();
		depOrUserNameLabel = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();

		setMinimumSize(new java.awt.Dimension(19000, 50));
		setOpaque(false);
		setPreferredSize(new java.awt.Dimension(350, 30));
		setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

		jLabel1.setText("img");
		add(jLabel1);

		jCheckBox1.setBorder(null);
		jCheckBox1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jCheckBox1.setMaximumSize(new java.awt.Dimension(18, 18));
		jCheckBox1.setMinimumSize(new java.awt.Dimension(18, 18));
		jCheckBox1.setOpaque(false);
		jCheckBox1.setPreferredSize(new java.awt.Dimension(18, 18));
		add(jCheckBox1);

		userPanel.setMaximumSize(new java.awt.Dimension(20, 20));
		userPanel.setMinimumSize(new java.awt.Dimension(20, 20));
		userPanel.setPreferredSize(new java.awt.Dimension(20, 20));
		userPanel.setLayout(new java.awt.BorderLayout());
		add(userPanel);

		depOrUserNameLabel.setText("username");
		depOrUserNameLabel.setMaximumSize(new java.awt.Dimension(480000, 15));
		add(depOrUserNameLabel);

		jLabel4.setText("renshu");
		add(jLabel4);
	}// </editor-fold>
	//GEN-END:initComponents

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JLabel depOrUserNameLabel;
	private javax.swing.JCheckBox jCheckBox1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JPanel userPanel;
	// End of variables declaration//GEN-END:variables

	private boolean selected = false;

	public javax.swing.JLabel getjLabel1() {
		return jLabel1;
	}

	public void setjLabel1(javax.swing.JLabel jLabel1) {
		this.jLabel1 = jLabel1;
	}

	public javax.swing.JLabel getjLabel4() {
		return jLabel4;
	}

	public void setjLabel4(javax.swing.JLabel jLabel4) {
		this.jLabel4 = jLabel4;
	}

	public boolean isSelected() {
		return selected;
	}

	public void setSelected(boolean selected) {
		this.selected = selected;
	}

	public DepartmentTreeNodePanel setDepOrUserNameLabelText(String text) {
		this.depOrUserNameLabel.setText(text);
		return this;
	}

	public String getDepOrUserNameLabelText() {
		return this.depOrUserNameLabel.getText();
	}

	public void setFirstImgVisible(boolean b) {
		this.jLabel1.setVisible(b);
	}

	public void setSecondImgVisible(boolean b) {
		//		this.jLabel2.setVisible(b);
	}

	//	@Override
	//    public Dimension getPreferredSize() {
	//		Dimension d_check = jCheckBox1.getPreferredSize();
	//        Dimension d_label = depOrUserNameLabel.getPreferredSize();
	//        return new Dimension(d_check.width + d_label.width,
	//                (d_check.height < d_label.height ? d_label.height
	//                : d_check.height));
	//    }
	//
	//    @Override
	//    public void doLayout() {
	//    	Dimension d_check = jCheckBox1.getPreferredSize();
	//        Dimension d_label = depOrUserNameLabel.getPreferredSize();
	//        int y_check = 0;
	//        int y_label = 0;
	//        if (d_check.height < d_label.height) {
	//            y_check = (d_label.height - d_check.height) / 2;
	//        } else {
	//            y_label = (d_check.height - d_label.height) / 2;
	//        }
	//        jCheckBox1.setLocation(0, y_check);
	//        jCheckBox1.setBounds(0, y_check, d_check.width, d_check.height);
	//        depOrUserNameLabel.setLocation(d_check.width, y_label);
	//        depOrUserNameLabel.setBounds(d_check.width, y_label, d_label.width, d_label.height);
	//        if (checkBounds == null){
	//            checkBounds = jCheckBox1.getBounds();
	//        }
	//    }

	public javax.swing.JCheckBox getCheckBox() {
		return this.jCheckBox1;
	}

	private static Rectangle checkBounds;

	public void setInfo(TreeNodeInfo info) {
		super.setInfo(info);
		if (info.isDepartmentFlag()) {
			this.depOrUserNameLabel.setText(info.getDepartment().getName());
			this.jLabel4.setText("[" + info.getDepartment().getOnlineNum()
					+ "/" + info.getDepartment().getTotal() + "]");
			//			this.jLabel2.setText("");
			//			this.jLabel2.setIcon(null);
			this.userPanel.setVisible(false);
			this.repaint();
		} else {
			MemberBean bean = info.getMember();
			this.jLabel4.setText("(" + bean.getLccAccount() + ")");
			this.depOrUserNameLabel.setText(info.getMember().getRealName());
			/*this.jLabel2.setText("");
			ImageIcon image = null;
			if (bean.getDefaultImg() == null || bean.getDefaultImg().equals("")) {
				image = UserInfoUtil.getHeadImg(bean.getState());
				Image temp = image.getImage().getScaledInstance(18, 18,
						image.getImage().SCALE_DEFAULT);
				image = new ImageIcon(temp);
				this.jLabel2.setIcon(image);
			}*/
			this.userPanel.removeAll();
			this.userPanel.add(ImageUtil.generateHeadImagePanel(bean, 20, 20), java.awt.BorderLayout.CENTER);
//			if(bean.getIsCustomPic()==0){
//				this.userPanel.add(new HeadImagePanel(bean.getDefaultImg(), bean
//						.getState(), 20, 20), java.awt.BorderLayout.CENTER);
//			}else{
//				this.userPanel.add(new HeadImagePanel(bean.getCustomPic(), bean
//						.getState(), 20, 20), java.awt.BorderLayout.CENTER);
//			}
		}
	}

	public static void main(String[] args) {
		Dimension d = new DepartmentTreeNodePanel().getPreferredSize();
		System.out.println(d.width + ":" + d.height);
	}
}