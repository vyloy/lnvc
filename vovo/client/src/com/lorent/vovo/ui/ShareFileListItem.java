/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ShareFileListItem.java
 *
 * Created on 2011-12-22, 14:16:52
 */
package com.lorent.vovo.ui;

import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.JProgressBar;

import org.apache.log4j.Logger;

import com.lorent.common.util.StringUtil;
import com.lorent.lvmc.util.ProcessUtil;
import com.lorent.vovo.Vovo;

/**
 *
 * @author Administrator
 */
public class ShareFileListItem extends javax.swing.JPanel {

	private Logger log = Logger.getLogger(ShareFileListItem.class);
	private String absolutePath;
	private String sessionID;
	private long fileSize;

	public long getFileSize() {
		return fileSize;
	}

	public void setFileSize(long fileSize) {
		this.fileSize = fileSize;
	}

	public String getSessionID() {
		return sessionID;
	}

	public void setSessionID(String sessionID) {
		this.sessionID = sessionID;
	}

	public String getAbsolutePath() {
		return absolutePath;
	}

	public void setAbsolutePath(String absolutepath) {
		this.absolutePath = absolutepath;
	}

	private boolean isFolder;

	public boolean isFolder() {
		return isFolder;
	}

	public boolean isUpperFolderType() {
		return isUpperFolderType;
	}

	public void setUpperFolderType(boolean isUpperFolderType) {
		this.isUpperFolderType = isUpperFolderType;
	}

	private boolean isUpperFolderType;

	/** Creates new form ShareFileListItem */
	public ShareFileListItem() {
		initComponents();
		progressBar.setVisible(false);
		cancelDownLoadHyperlink.setVisible(false);
		cancelUpLoadHyperlink.setVisible(false);
		openHyperlink.setVisible(false);
		openPathHyperlink.setVisible(false);
	}

	public void setFileName(String filename) {
		fileNameLabel.setText(filename);
	}

	public String getFileName() {
		return fileNameLabel.getText();
	}

	public void setFolderIcon(boolean upper) {
		setUpperFolderType(upper);
		isFolder = true;
		if (upper) {
			iconLabel
					.setIcon(new javax.swing.ImageIcon(
							ShareFileListItem.class
									.getResource("/com/lorent/vovo/resource/images/files/folder-go.png")));
		} else {
			iconLabel
					.setIcon(new javax.swing.ImageIcon(
							ShareFileListItem.class
									.getResource("/com/lorent/vovo/resource/images/files/folder-2.png")));
		}
	}

	private void setFileIcon(String ext) {
		isFolder = false;
		String name = ext.toLowerCase();
		if (name.equals("doc")) {
			iconLabel
					.setIcon(new javax.swing.ImageIcon(
							ShareFileListItem.class
									.getResource("/com/lorent/vovo/resource/images/files/report-word.png")));
		} else if (name.equals("pdf")) {
			iconLabel
					.setIcon(new javax.swing.ImageIcon(
							ShareFileListItem.class
									.getResource("/com/lorent/vovo/resource/images/files/acroread.png")));
		} else if (name.equals("jpg") || name.equals("png")
				|| name.equals("jpeg") || name.equals("bmp")
				|| name.equals("gif")) {
			iconLabel
					.setIcon(new javax.swing.ImageIcon(
							ShareFileListItem.class
									.getResource("/com/lorent/vovo/resource/images/files/picture.png")));
		} else if (name.equals("mp3") || name.equals("wav")) {
			iconLabel
					.setIcon(new javax.swing.ImageIcon(
							ShareFileListItem.class
									.getResource("/com/lorent/vovo/resource/images/files/kbemusedsrv.png")));
		} else if (name.equals("txt") || name.equals("log")) {
			iconLabel
					.setIcon(new ImageIcon(
							ShareFileListItem.class
									.getResource("/com/lorent/vovo/resource/images/files/format-justify-fill-2.png")));
		} else {
			iconLabel
					.setIcon(new ImageIcon(
							ShareFileListItem.class
									.getResource("/com/lorent/vovo/resource/images/files/document-new.png")));
		}

	}

	public void setIconFromFileName(String filename) {
		if (filename != null || !filename.equals("")) {
			int lastIndexOf = filename.lastIndexOf(".");
			if (lastIndexOf != -1) {
				String extStr = filename.substring(lastIndexOf + 1);
				setFileIcon(extStr);
			}
		}
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		leftPanel = new javax.swing.JPanel();
		iconLabel = new javax.swing.JLabel();
		fileNameLabel = new javax.swing.JLabel();
		itemInfoPanel = new javax.swing.JPanel();
		sizeLabel = new javax.swing.JLabel();
		modifyDateLabel = new javax.swing.JLabel();
		userLabel = new javax.swing.JLabel();
		jPanel1 = new javax.swing.JPanel();
		progressBar = new javax.swing.JProgressBar();
		jPanel2 = new javax.swing.JPanel();
		cancelDownLoadHyperlink = new org.jdesktop.swingx.JXHyperlink();
		cancelUpLoadHyperlink = new org.jdesktop.swingx.JXHyperlink();
		openHyperlink = new org.jdesktop.swingx.JXHyperlink();
		openPathHyperlink = new org.jdesktop.swingx.JXHyperlink();

		setMaximumSize(new java.awt.Dimension(2147483647, 27));
		setOpaque(false);
		addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseEntered(java.awt.event.MouseEvent evt) {
				formMouseEntered(evt);
			}

			public void mouseExited(java.awt.event.MouseEvent evt) {
				formMouseExited(evt);
			}
		});
		setLayout(new java.awt.BorderLayout());

		leftPanel.setOpaque(false);
		leftPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
		leftPanel.add(iconLabel);

		fileNameLabel.setText("\u6587\u4ef6\u540d");
		leftPanel.add(fileNameLabel);

		add(leftPanel, java.awt.BorderLayout.WEST);

		itemInfoPanel.setOpaque(false);
		itemInfoPanel.setLayout(new java.awt.FlowLayout(
				java.awt.FlowLayout.RIGHT));
		itemInfoPanel.add(sizeLabel);
		itemInfoPanel.add(modifyDateLabel);
		itemInfoPanel.add(userLabel);

		add(itemInfoPanel, java.awt.BorderLayout.EAST);

		jPanel1.setOpaque(false);
		jPanel1.setLayout(new java.awt.BorderLayout());

		progressBar.setMaximumSize(new java.awt.Dimension(32767, 16));
		progressBar.setMinimumSize(new java.awt.Dimension(10, 16));
		progressBar.setPreferredSize(new java.awt.Dimension(146, 10));
		progressBar.setStringPainted(true);
		jPanel1.add(progressBar, java.awt.BorderLayout.CENTER);

		jPanel2.setOpaque(false);

		cancelDownLoadHyperlink.setText("\u53d6\u6d88\u4e0b\u8f7d");
		cancelDownLoadHyperlink
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						cancelDownLoadHyperlinkActionPerformed(evt);
					}
				});
		jPanel2.add(cancelDownLoadHyperlink);

		cancelUpLoadHyperlink.setText("\u53d6\u6d88\u4e0a\u4f20");
		cancelUpLoadHyperlink
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						cancelUpLoadHyperlinkActionPerformed(evt);
					}
				});
		jPanel2.add(cancelUpLoadHyperlink);

		openHyperlink.setText("\u6253\u5f00");
		openHyperlink.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				openHyperlinkActionPerformed(evt);
			}
		});
		jPanel2.add(openHyperlink);

		openPathHyperlink.setText("\u6253\u5f00\u6587\u4ef6\u5939");
		openPathHyperlink
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						openPathHyperlinkActionPerformed(evt);
					}
				});
		jPanel2.add(openPathHyperlink);

		jPanel1.add(jPanel2, java.awt.BorderLayout.EAST);

		add(jPanel1, java.awt.BorderLayout.CENTER);
	}// </editor-fold>
	//GEN-END:initComponents

	private void openPathHyperlinkActionPerformed(java.awt.event.ActionEvent evt) {
		File file = new File(getAbsolutePath());
		String path = file.getParent();
		try {
			String cmd =  "cmd.exe /c  explorer " +StringUtil.convertFilePath2DOSCommandStr(path);
			log.info("打开文件夹："+cmd);
			Runtime.getRuntime().exec(cmd);
		} catch (Exception e) {
			log.error("打开文件夹:", e);
			e.printStackTrace();
		}
	}

	private void openHyperlinkActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			String cmd = "cmd.exe /c " + StringUtil.convertFilePath2DOSCommandStr(getAbsolutePath());
			log.info("打开文件："+cmd);
			Runtime.getRuntime().exec(cmd);
		} catch (Exception e) {
			log.error("打开文件:", e);
			e.printStackTrace();
		}
	}

	private void cancelUpLoadHyperlinkActionPerformed(
			java.awt.event.ActionEvent evt) {
		Vovo.exeC("sharefile", "cancelTransferData", this);
	}

	private void cancelDownLoadHyperlinkActionPerformed(
			java.awt.event.ActionEvent evt) {
		Vovo.exeC("sharefile", "cancelTransferData", this);
	}

	private void formMouseExited(java.awt.event.MouseEvent evt) {
		//		this.setBorder(null);
	}

	private void formMouseEntered(java.awt.event.MouseEvent evt) {
		//		this.setBorder(BorderFactory.createEtchedBorder());
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private org.jdesktop.swingx.JXHyperlink cancelDownLoadHyperlink;
	private org.jdesktop.swingx.JXHyperlink cancelUpLoadHyperlink;
	private javax.swing.JLabel fileNameLabel;
	private javax.swing.JLabel iconLabel;
	private javax.swing.JPanel itemInfoPanel;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel leftPanel;
	private javax.swing.JLabel modifyDateLabel;
	private org.jdesktop.swingx.JXHyperlink openHyperlink;
	private org.jdesktop.swingx.JXHyperlink openPathHyperlink;
	private javax.swing.JProgressBar progressBar;
	private javax.swing.JLabel sizeLabel;
	private javax.swing.JLabel userLabel;

	// End of variables declaration//GEN-END:variables

	public JPanel getLeftPanel() {
		return leftPanel;
	}

	public JProgressBar getProgressBar() {
		return progressBar;
	}

	public void setTextForeground(java.awt.Color color) {
		fileNameLabel.setForeground(color);
	}

	public javax.swing.JLabel getModifyDateLabel() {
		return modifyDateLabel;
	}

	public javax.swing.JLabel getSizeLabel() {
		return sizeLabel;
	}

	public javax.swing.JLabel getUserLabel() {
		return userLabel;
	}

	public javax.swing.JPanel getItemInfoPanel() {
		return itemInfoPanel;
	}

	public org.jdesktop.swingx.JXHyperlink getCancelDownLoadHyperlink() {
		return cancelDownLoadHyperlink;
	}

	public org.jdesktop.swingx.JXHyperlink getCancelUpLoadHyperlink() {
		return cancelUpLoadHyperlink;
	}

	public org.jdesktop.swingx.JXHyperlink getOpenHyperlink() {
		return openHyperlink;
	}

	public org.jdesktop.swingx.JXHyperlink getOpenPathHyperlink() {
		return openPathHyperlink;
	}
}
