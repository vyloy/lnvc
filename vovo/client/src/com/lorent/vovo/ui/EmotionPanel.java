/*
 * EmotionPanel.java
 *
 * Created on __DATE__, __TIME__
 */

package com.lorent.vovo.ui;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Map;
import java.util.Set;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

import org.apache.log4j.Logger;

/**
 *
 * @author  Jack
 */
public class EmotionPanel extends javax.swing.JPanel {

	private Logger log = Logger.getLogger(EmotionPanel.class);
	private int maxCol = 10;

	/** Creates new form EmotionPanel */
	public EmotionPanel() {
		initComponents();
		setLayout(new java.awt.GridLayout(0, maxCol));
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		setLayout(new java.awt.GridLayout(0, 10, 5, 5));
	}// </editor-fold>
	//GEN-END:initComponents

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	// End of variables declaration//GEN-END:variables

	private int emotionSize;
	private Map<String, ImageIcon> map;
	
	public void init(Map<String, ImageIcon> map) {
		this.map = map;
		MyMouseAdapter ada = new MyMouseAdapter();
		Set<String> keys = map.keySet();
		emotionSize = keys.size();
		for (String filename : keys) {
			ImageIcon icon = map.get(filename);
			JLabel label = new JLabel(icon);
			label.setName(filename);
			label.setBorder(BorderFactory.createLineBorder(Color.WHITE, 1));
			label.addMouseListener(ada);
			label.addMouseMotionListener(ada);
			this.add(label);
		}
		log.info("emotion size = " + emotionSize);
	}

	public class MyMouseAdapter extends MouseAdapter {
		@Override
		public void mouseClicked(MouseEvent e) {
			log.info("click " + e.getComponent().getName());
			String name = e.getComponent().getName();
			if(listener!=null){
				listener.mouseClick(name, map.get(name));
			}
		}

		@Override
		public void mouseEntered(MouseEvent e) {
			JLabel l = (JLabel) e.getComponent();
			l.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
		}

		@Override
		public void mouseExited(MouseEvent e) {
			JLabel l = (JLabel) e.getComponent();
			l.setBorder(BorderFactory.createLineBorder(Color.WHITE, 1));
		}
	}
	
	public interface ClickListener{
		public void mouseClick(String name, ImageIcon icon);
	}
	
	private ClickListener listener;
	public void setClickListener(ClickListener l){
		this.listener = l;
	}


	public static void main(String[] args) {
		EmotionPanel panel = new EmotionPanel();
//		panel.init("/com/lorent/vovo/resource/images/defaultface");
		JFrame f = new JFrame();
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		f.setSize(500, 500);
		f.add(panel);
		f.setVisible(true);
	}

}